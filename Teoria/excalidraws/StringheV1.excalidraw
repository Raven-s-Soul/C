{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "rectangle",
      "version": 278,
      "versionNonce": 1356555239,
      "isDeleted": false,
      "id": "MQJ8NQ0B8zA8W0O2yHV20",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -54.346586311590954,
      "y": 1894.2185730021406,
      "strokeColor": "#0000",
      "backgroundColor": "#fa5252",
      "width": 150,
      "height": 27.142857142857338,
      "seed": 1481040263,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false
    },
    {
      "id": "Eiw_6OMi1PcSxsLpuG39C",
      "type": "rectangle",
      "x": -52.91801488301962,
      "y": 1839.2185730021413,
      "width": 202.8571428571429,
      "height": 32.85714285714289,
      "angle": 0,
      "strokeColor": "#0000",
      "backgroundColor": "#40c057",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1481040263,
      "version": 153,
      "versionNonce": 1206546953,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625043,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 273,
      "versionNonce": 1471434503,
      "isDeleted": false,
      "id": "n0HTipZpwgGINuR2UMO6p",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 309.22043286230974,
      "y": 146.0672390212228,
      "strokeColor": "#921",
      "backgroundColor": "transparent",
      "width": 76.61991882324219,
      "height": 25,
      "seed": 1391166674,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Stringhe",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Stringhe",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 7257,
      "versionNonce": 1740720361,
      "isDeleted": false,
      "id": "7Jl1YxFKPnC3kz1F1FjkB",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -50.23787850345582,
      "y": 194.4937875070379,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 809.29931640625,
      "height": 875,
      "seed": 1625799954,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Le stringhe sono un array di caratteri.\nOgni simbolo numero e lettera è un carattere, gli ascii sono la codifica in numero.\nASCII = American Standard Code for Information Interchange\n'A' 'a' '1' '6' '¥' sono tutti caratteri singoli, un array di caratteri sono \n\"Aaaaa\" \"2323213\" ecc ecc\nNotare la differenza tra ' ' e \" \" .\n\nAl termine di una stringa è presente un carattere '\\0' il quale chiude \nuna stringa.\n\nEs char array[10];\n\n[] [] [] [] [] [] [] [] [] [] dentro ogni [] può essere presente un solo char.\n\nEs char array[] = \"Riempe un array automaticamente e lo auto dimensiona\" ;\n\nStringa vuota => \"\" la quale ha size 1 e quindi '/0' a differenza di\n\" \" che è formata da 2 char ' ' e '\\0'\n\ncome gli array le stringhe partono da 0 e quindi entrando nell indirizzo di\nmemoria desiderato è possibile modificare un singolo elemento di una stringa\n\nEs char array[] = \"Array\";\narray [0] = 'B';\nprintf(\"%s\", array);\n\nutilizzando %s in un printf si può stampare una stringa.\nRicorda dovresti usare come parametro solamente la variabile senza &\nessendo già un puntatore.\n\npotenzialmente puoi stampare un array tramite un ciclo e stampare gli elementi\nsingoli del array fino a quando con la condizione (Array[i] != '\\0')\n\nModifica di un array non da problemi, mentre modificare un letterale come\nmodificaFunc(\"Abc\"); non funziona.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Le stringhe sono un array di caratteri.\nOgni simbolo numero e lettera è un carattere, gli ascii sono la codifica in numero.\nASCII = American Standard Code for Information Interchange\n'A' 'a' '1' '6' '¥' sono tutti caratteri singoli, un array di caratteri sono \n\"Aaaaa\" \"2323213\" ecc ecc\nNotare la differenza tra ' ' e \" \" .\n\nAl termine di una stringa è presente un carattere '\\0' il quale chiude \nuna stringa.\n\nEs char array[10];\n\n[] [] [] [] [] [] [] [] [] [] dentro ogni [] può essere presente un solo char.\n\nEs char array[] = \"Riempe un array automaticamente e lo auto dimensiona\" ;\n\nStringa vuota => \"\" la quale ha size 1 e quindi '/0' a differenza di\n\" \" che è formata da 2 char ' ' e '\\0'\n\ncome gli array le stringhe partono da 0 e quindi entrando nell indirizzo di\nmemoria desiderato è possibile modificare un singolo elemento di una stringa\n\nEs char array[] = \"Array\";\narray [0] = 'B';\nprintf(\"%s\", array);\n\nutilizzando %s in un printf si può stampare una stringa.\nRicorda dovresti usare come parametro solamente la variabile senza &\nessendo già un puntatore.\n\npotenzialmente puoi stampare un array tramite un ciclo e stampare gli elementi\nsingoli del array fino a quando con la condizione (Array[i] != '\\0')\n\nModifica di un array non da problemi, mentre modificare un letterale come\nmodificaFunc(\"Abc\"); non funziona.",
      "lineHeight": 1.25,
      "baseline": 868
    },
    {
      "type": "arrow",
      "version": 1101,
      "versionNonce": 1719850535,
      "isDeleted": false,
      "id": "qDqSUoEA1RW2o3n2C77MR",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 166.75914529520912,
      "y": 807.9360474320799,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 100.27746827851684,
      "height": 1.7294502275685772,
      "seed": 1513776978,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          100.27746827851684,
          1.7294502275685772
        ]
      ]
    },
    {
      "type": "text",
      "version": 1119,
      "versionNonce": 1482310601,
      "isDeleted": false,
      "id": "ShT32lrEG7OltqBs_dksf",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 297.45425665627874,
      "y": 796.8033300472111,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 67.79995727539062,
      "height": 25,
      "seed": 634946386,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Barray",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Barray",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 1794,
      "versionNonce": 407676777,
      "isDeleted": false,
      "id": "BKGkn_9TER0OCrcIkKOpe",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 217.2005881819706,
      "y": 1622.6491705647963,
      "strokeColor": "#1864ab",
      "backgroundColor": "transparent",
      "width": 289.759765625,
      "height": 25,
      "seed": 531904629,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772655139,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "tanto codice per una lettura",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "tanto codice per una lettura",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 470,
      "versionNonce": 97575593,
      "isDeleted": false,
      "id": "IDYobtK_qlO5xpBPLrLbs",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 828.4848745742021,
      "y": 1728.6194920589203,
      "strokeColor": "#1864ab",
      "backgroundColor": "transparent",
      "width": 672.5394287109375,
      "height": 100,
      "seed": 779630779,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "tipi Es:\n*Verificare se almeno 1 o tutti i caratteri soddisfano una proprietà\n*Modificare i caratteri e lunghezza di una stringa\n*Eliminare caratteri da una stringa",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "tipi Es:\n*Verificare se almeno 1 o tutti i caratteri soddisfano una proprietà\n*Modificare i caratteri e lunghezza di una stringa\n*Eliminare caratteri da una stringa",
      "lineHeight": 1.25,
      "baseline": 93
    },
    {
      "type": "text",
      "version": 406,
      "versionNonce": 639809639,
      "isDeleted": false,
      "id": "n7m6hCbOkJXZ1_pbFbSbF",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 834.3938777628487,
      "y": 1619.3291947901494,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 727.679443359375,
      "height": 75,
      "seed": 1533971957,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "loop(string[i] != '\\0')\n    if((string[i]>='a' && string[i]<='z') || (string[i]>='A' && string[i]<='Z'))\n        shift() //per rimozione del carattere",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "loop(string[i] != '\\0')\n    if((string[i]>='a' && string[i]<='z') || (string[i]>='A' && string[i]<='Z'))\n        shift() //per rimozione del carattere",
      "lineHeight": 1.25,
      "baseline": 68
    },
    {
      "type": "text",
      "version": 423,
      "versionNonce": 1288742281,
      "isDeleted": false,
      "id": "HzkNDFfatfN9-prXq9S0X",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 840.9024112545142,
      "y": 1490.082829350556,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 262.81982421875,
      "height": 50,
      "seed": 98659189,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "loop(string[i] != '\\0')\n    string[i] = string[i+1]; ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "loop(string[i] != '\\0')\n    string[i] = string[i+1]; ",
      "lineHeight": 1.25,
      "baseline": 43
    },
    {
      "type": "text",
      "version": 338,
      "versionNonce": 572330887,
      "isDeleted": false,
      "id": "j2jPQ_HGZI_l-C3Af60bk",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 838.3377778815977,
      "y": 1297.355348174498,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 609.1995849609375,
      "height": 125,
      "seed": 547680283,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625043,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "loop(string[i] != '\\0')\n    if(string[i]>='a' && string[i]<='z')\n        string[i] = string[i] + 'A' - 'a'; \n    //i++\n//A-a è l'offset nella tabella ascii tra maiuscole e minuscole",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "loop(string[i] != '\\0')\n    if(string[i]>='a' && string[i]<='z')\n        string[i] = string[i] + 'A' - 'a'; \n    //i++\n//A-a è l'offset nella tabella ascii tra maiuscole e minuscole",
      "lineHeight": 1.25,
      "baseline": 118
    },
    {
      "type": "text",
      "version": 328,
      "versionNonce": 1754598505,
      "isDeleted": false,
      "id": "lVXt2IIqaDKHBxBE0dlyg",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 837.856477842015,
      "y": 1110.0445336651064,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 327.69970703125,
      "height": 125,
      "seed": 1724417045,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "loop(string[i] != '\\0' && Numerici)\n    if(string[i]<'0' || string[i]>'9')\n        Numerici = 0;\n    //else i++\nreturn Numerici;",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "loop(string[i] != '\\0' && Numerici)\n    if(string[i]<'0' || string[i]>'9')\n        Numerici = 0;\n    //else i++\nreturn Numerici;",
      "lineHeight": 1.25,
      "baseline": 118
    },
    {
      "type": "text",
      "version": 343,
      "versionNonce": 1616841383,
      "isDeleted": false,
      "id": "LUJnv1hIJ8jnExK_y5KDN",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 830.0333109774331,
      "y": 848.1779878806984,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 549.1795043945312,
      "height": 175,
      "seed": 826802171,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "strcpy(string1 , string2);\ncopia la seconda nella prima\n\ncustom strcpy: (usare pointers per ovviare allo spazio!)\nloop(string2[i] != '\\0')\n    string1[i] =string2[i];\nstring1[i]='\\0';  ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "strcpy(string1 , string2);\ncopia la seconda nella prima\n\ncustom strcpy: (usare pointers per ovviare allo spazio!)\nloop(string2[i] != '\\0')\n    string1[i] =string2[i];\nstring1[i]='\\0';  ",
      "lineHeight": 1.25,
      "baseline": 168
    },
    {
      "type": "text",
      "version": 451,
      "versionNonce": 552179529,
      "isDeleted": false,
      "id": "NPQDjRb2gj5ruS41T8fPG",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 827.9176609576416,
      "y": 376.04474371919383,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 657.5594482421875,
      "height": 425,
      "seed": 1726392955,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "strcmp(string1 , string2);\nda come risultato 0 se sono uguali\npositvo se la seconda precede la prima in ordine lessicografico\nnegativo se la prima precede.\n\n\n//ciclo fino a quando i caratteri sono uguali o finisce almeno 1\nloop(stringa1[i]!= '\\0' && stringa2[i] != '\\0' && differenza ==0){\n    differenza = stringa1[i] - stringa2[i];\n} \n//filtro con le condizione per ottenere un risultato simile a strcmp\nif(differenza == 0) \n    if(stringa1[i]== '\\0' && stringa2[i] != '\\0')\n        differenza = -1;\n    else if(stringa1[i]!= '\\0' && stringa2[i] == '\\0')\n        differenza = 1;\nreturn differenza;",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "strcmp(string1 , string2);\nda come risultato 0 se sono uguali\npositvo se la seconda precede la prima in ordine lessicografico\nnegativo se la prima precede.\n\n\n//ciclo fino a quando i caratteri sono uguali o finisce almeno 1\nloop(stringa1[i]!= '\\0' && stringa2[i] != '\\0' && differenza ==0){\n    differenza = stringa1[i] - stringa2[i];\n} \n//filtro con le condizione per ottenere un risultato simile a strcmp\nif(differenza == 0) \n    if(stringa1[i]== '\\0' && stringa2[i] != '\\0')\n        differenza = -1;\n    else if(stringa1[i]!= '\\0' && stringa2[i] == '\\0')\n        differenza = 1;\nreturn differenza;",
      "lineHeight": 1.25,
      "baseline": 418
    },
    {
      "type": "text",
      "version": 550,
      "versionNonce": 1838489031,
      "isDeleted": false,
      "id": "iAd-MX067hzynNBGeu_jp",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -50.81853801319971,
      "y": 1104.8111518990597,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 856.9593505859375,
      "height": 100,
      "seed": 715375547,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "E' una relazione d'ordine stretto... bla bla... dovete sapere che consiste nel prese 2\nstringhe dice da quale lettera c'è una differenza tra le 2. \nes: \"Hello\" e \"Help!\" sono simili nelle prime 3 lettere ma alla 4 c'è una differenza (K=4)\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "E' una relazione d'ordine stretto... bla bla... dovete sapere che consiste nel prese 2\nstringhe dice da quale lettera c'è una differenza tra le 2. \nes: \"Hello\" e \"Help!\" sono simili nelle prime 3 lettere ma alla 4 c'è una differenza (K=4)\n",
      "lineHeight": 1.25,
      "baseline": 93
    },
    {
      "id": "chjJoRMS0Zp3GGQQXbGKu",
      "type": "text",
      "x": -51.358491073491564,
      "y": 1218.8217476053114,
      "width": 788.8793334960938,
      "height": 800,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1681288903,
      "version": 1532,
      "versionNonce": 52518055,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "scanf: legge fino al primo spazio e legge una dimensione finita di caratteri\nse dovesse prendere più caratteri di quelli che può occupare potrebbe accadere\ncose molto brutte.\n\nPercui si usa fgets - char * fgets ( char * str, int n , .FILE *stream)\n\n\n\n20 è la dimensione e il 3* parametro è per dichiarare che cosa leggere nel\nnostro caso stdin è per leggere la tastiera.\nAttenzione che viene salvato pure lo /n (l'accapo del utente)\npercui potete usare opportune funzioni della libreria string.h\n\nAlternative:\nwhile (array[i] != '\\n'){\n    array[i] = c;\n    c = getchar();\n    i++;\n}\npersona[i] = '\\0';\n\nmentre:\nscanf(\"%[^\\n]\",array); legge fino a uno \\n (un accapo)\nè soggetta a un buffer overflow\n\nMeglio usare fgets.\n\nATTENZIONE!\nscanf seguita da un fgets fa skippare la fgets, perche lascia in buffere \\n\nes soluzione\nscanf(\"%d %*c\" &var);   => %*c no viene salvato\nfgets(stringa, 50, stdin);",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 793,
      "containerId": null,
      "originalText": "scanf: legge fino al primo spazio e legge una dimensione finita di caratteri\nse dovesse prendere più caratteri di quelli che può occupare potrebbe accadere\ncose molto brutte.\n\nPercui si usa fgets - char * fgets ( char * str, int n , .FILE *stream)\n\n\n\n20 è la dimensione e il 3* parametro è per dichiarare che cosa leggere nel\nnostro caso stdin è per leggere la tastiera.\nAttenzione che viene salvato pure lo /n (l'accapo del utente)\npercui potete usare opportune funzioni della libreria string.h\n\nAlternative:\nwhile (array[i] != '\\n'){\n    array[i] = c;\n    c = getchar();\n    i++;\n}\npersona[i] = '\\0';\n\nmentre:\nscanf(\"%[^\\n]\",array); legge fino a uno \\n (un accapo)\nè soggetta a un buffer overflow\n\nMeglio usare fgets.\n\nATTENZIONE!\nscanf seguita da un fgets fa skippare la fgets, perche lascia in buffere \\n\nes soluzione\nscanf(\"%d %*c\" &var);   => %*c no viene salvato\nfgets(stringa, 50, stdin);",
      "lineHeight": 1.25
    },
    {
      "id": "eAov4yrtsnE0LAasar6Vp",
      "type": "text",
      "x": 826.9391279741275,
      "y": 208.2265095100745,
      "width": 791.6993408203125,
      "height": 125,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 961102345,
      "version": 149,
      "versionNonce": 1068328265,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Per importare la libreria string.h usare => #include <string.h>\n\nstrlen(stringa o letterale) che da come valore intero la dimensione della stringa\noppure potreste fare una funzione che conta tutti gli elementi di una stringa\ncon un loop fino a quando il char != '\\0'",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 118,
      "containerId": null,
      "originalText": "Per importare la libreria string.h usare => #include <string.h>\n\nstrlen(stringa o letterale) che da come valore intero la dimensione della stringa\noppure potreste fare una funzione che conta tutti gli elementi di una stringa\ncon un loop fino a quando il char != '\\0'",
      "lineHeight": 1.25
    },
    {
      "id": "_8R0QFixxE-wFhvoB92Cp",
      "type": "text",
      "x": 1041.5224613074583,
      "y": 157.47650951007384,
      "width": 202.69979858398438,
      "height": 25,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 835639849,
      "version": 73,
      "versionNonce": 1748840391,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Pratico/Esercizi tipo",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Pratico/Esercizi tipo",
      "lineHeight": 1.25
    },
    {
      "id": "VixpFbK28vQ0WWjyCvenr",
      "type": "text",
      "x": 829.0224613074581,
      "y": 349.97650951007387,
      "width": 149.99986267089844,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1879190631,
      "version": 64,
      "versionNonce": 692311081,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "String Compare:",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "String Compare:",
      "lineHeight": 1.25
    },
    {
      "id": "38hOqb292JJe5TASqV5i9",
      "type": "text",
      "x": 830.2724613074581,
      "y": 497.4765095100738,
      "width": 148.2998504638672,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 283203625,
      "version": 98,
      "versionNonce": 1555144423,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Custom strcmp:",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Custom strcmp:",
      "lineHeight": 1.25
    },
    {
      "id": "56d7RhA6ZSinyZsLLppu0",
      "type": "text",
      "x": 827.7724613074581,
      "y": 823.7265095100739,
      "width": 110.99989318847656,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 785193,
      "version": 83,
      "versionNonce": 938043145,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "String copy:",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "String copy:",
      "lineHeight": 1.25
    },
    {
      "id": "ROkHP-yPd90RmSP6DhZc6",
      "type": "text",
      "x": 834.8557946407914,
      "y": 1080.3931761767406,
      "width": 354.439697265625,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1104869801,
      "version": 127,
      "versionNonce": 587934215,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Filtrare per solo caratteri numerici?",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Filtrare per solo caratteri numerici?",
      "lineHeight": 1.25
    },
    {
      "id": "NYcuYQz3pcXpt8_ZspdtQ",
      "type": "text",
      "x": 837.3557946407914,
      "y": 1272.059842843407,
      "width": 159.7598419189453,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2116817993,
      "version": 101,
      "versionNonce": 2017874215,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Tutti Maiuscoli?",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Tutti Maiuscoli?",
      "lineHeight": 1.25
    },
    {
      "id": "T8nMSsGMLVK7BWEZ-dWG0",
      "type": "text",
      "x": 834.4391279741244,
      "y": 1457.8931761767403,
      "width": 293.3797607421875,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1406766601,
      "version": 125,
      "versionNonce": 1390409929,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Shift laterale di una stringa?",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Shift laterale di una stringa?",
      "lineHeight": 1.25
    },
    {
      "id": "CarpI9TZSDoGCOvzZenOx",
      "type": "text",
      "x": 834.4391279741242,
      "y": 1592.0598428434073,
      "width": 151.53985595703125,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 514647017,
      "version": 169,
      "versionNonce": 1171231815,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Solo Alfabetici?",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Solo Alfabetici?",
      "lineHeight": 1.25
    },
    {
      "id": "OQXqoV4ZPiguvTGoYPakP",
      "type": "text",
      "x": 830.9391279741249,
      "y": 1902.7979380815027,
      "width": 776.5393676757812,
      "height": 100,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 500898631,
      "version": 333,
      "versionNonce": 1876424617,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "usando la funzione atoi, ponendo una stringa dove siano tutti numeri,\nrestituisce un valore intero che corrisponde alla stringa. (atof è per i double)\nl'utilizzo è semplice int var = atoi(stringa);\nFunziona solo se sono tutti numeri!",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 93,
      "containerId": null,
      "originalText": "usando la funzione atoi, ponendo una stringa dove siano tutti numeri,\nrestituisce un valore intero che corrisponde alla stringa. (atof è per i double)\nl'utilizzo è semplice int var = atoi(stringa);\nFunziona solo se sono tutti numeri!",
      "lineHeight": 1.25
    },
    {
      "id": "k5L0c4z75_FFVLh68ARWS",
      "type": "text",
      "x": 830.1057946407916,
      "y": 1866.5479380815027,
      "width": 390.07965087890625,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 891606249,
      "version": 355,
      "versionNonce": 967732871,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Atoi? string ASCII to integer [stdlib.h]",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Atoi? string ASCII to integer [stdlib.h]",
      "lineHeight": 1.25
    },
    {
      "id": "4HKv60cGVF3qISjlIAOMK",
      "type": "text",
      "x": -50.06087202587685,
      "y": 1077.7900015735697,
      "width": 196.43980407714844,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 651291399,
      "version": 52,
      "versionNonce": 1369104745,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Ordine Lessiografico",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Ordine Lessiografico",
      "lineHeight": 1.25
    },
    {
      "id": "MnctmO5hS3Ttt2DjekbyF",
      "type": "text",
      "x": -50.06087202587662,
      "y": 1192.0757158592842,
      "width": 337.6796875,
      "height": 25,
      "angle": 0,
      "strokeColor": "#0b7285",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1407327785,
      "version": 89,
      "versionNonce": 1393362343,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "Letture? / Come leggere stringhe=",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 18,
      "containerId": null,
      "originalText": "Letture? / Come leggere stringhe=",
      "lineHeight": 1.25
    },
    {
      "id": "Rox4bvx3TjdXndkPgi8C8",
      "type": "text",
      "x": -48.63230059730523,
      "y": 1352.0757158592842,
      "width": 246.4397735595703,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1864ab",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 130531209,
      "version": 54,
      "versionNonce": 42403815,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681772625044,
      "link": null,
      "locked": false,
      "text": "char stringa [20];\nfgets(stringa, 20, stdin);",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 43,
      "containerId": null,
      "originalText": "char stringa [20];\nfgets(stringa, 20, stdin);",
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}